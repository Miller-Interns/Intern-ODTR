// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

enum Status {
  INCOMING
  ONGOING
  COMPLETED
}

generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

generator kysely {
  provider           = "prisma-kysely"
  previewFeatures    = ["multiSchema"]
  output             = "../app/server/db"
  fileName           = "types.d.ts"
  bigIntTypeOverride = "bigint"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_CONNECTION_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String?
  password  String?  @db.VarChar(255)
  isAdmin   Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  Intern  Intern[]
  TimeLog TimeLog[]

  @@map("users")
}

model Batch {
  id           String    @id @default(uuid())
  batch_number String
  start_date   DateTime  @default(now())
  end_date     DateTime?
  status       Boolean   @default(true)

  Intern Intern[]

  @@map("batches")
}

model Intern {
  id                       String  @id @default(uuid())
  user                     User    @relation(fields: [user_id], references: [id])
  user_id                  String  @unique
  batch                    Batch   @relation(fields: [batch_id], references: [id])
  batch_id                 String
  first_name               String
  middle_name              String?
  last_name                String
  school                   String
  course                   String
  year                     String
  contact_number           String
  emergency_contact_person String
  emergency_contact_number String
  required_hours           Float
  status                   Status  @default(INCOMING)
  hours_completed          Float
  intern_picture           String?
  role                     String?
  notes                    String?

  TimeLog TimeLog[]

  @@map("interns")
}

model TimeLog {
  id            String    @id @default(uuid())
  intern        Intern    @relation(fields: [intern_id], references: [id])
  intern_id     String
  time_in       DateTime
  time_out      DateTime?
  total_hours   Float
  admin_remarks String?
  intern_notes  String?
  status        Boolean   @default(false)
  user          User?     @relation(fields: [admin_id], references: [id])
  admin_id      String?

  @@map("time_logs")
}
